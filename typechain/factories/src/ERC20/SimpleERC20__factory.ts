/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleERC20,
  SimpleERC20Interface,
} from "../../../src/ERC20/SimpleERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "approveAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "distributeAlongWithETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "payForAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAlongWithETH",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferFromAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620016c3380380620016c3833981016040819052620000349162000181565b6040805180820190915260018152603160f81b60208201527f91ab3d17e3a50a9d89e63fd30b92be7f5336b03b287bb946787a83a9d62a27666200009760408051808201909152600c81526b053696d706c652045524332360a41b602082015290565b8051602091820120835184830120604080519384019490945292820152606081019190915230608082015260a00160408051601f19818403018152919052805160209091012060805250620000ed8282620000f5565b5050620001e5565b80600080828254620001089190620001bd565b90915550506001600160a01b0382166000908152600160205260408120805483929062000137908490620001bd565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080604083850312156200019557600080fd5b82516001600160a01b0381168114620001ad57600080fd5b6020939093015192949293505050565b80820180821115620001df57634e487b7160e01b600052601160045260246000fd5b92915050565b6080516114bb620002086000396000818161025101526108fd01526114bb6000f3fe6080604052600436106101445760003560e01c806363d994c7116100c0578063c1d34b8911610074578063d505accf11610059578063d505accf146103ea578063dd62ed3e1461040a578063e7fcb0651461042a57600080fd5b8063c1d34b89146103aa578063cae9ca51146103ca57600080fd5b80637ecebe00116100a55780637ecebe001461030b57806395d89b4114610341578063a9059cbb1461038a57600080fd5b806363d994c7146102b557806370a08231146102d557600080fd5b806323b872dd116101175780633644e515116100fc5780633644e5151461023f5780634000aea01461027357806342966c681461029357600080fd5b806323b872dd14610203578063313ce5671461022357600080fd5b806306fdde0314610149578063095ea7b3146101a15780630e02df54146101d157806318160ddd146101e4575b600080fd5b34801561015557600080fd5b5060408051808201909152600c81527f53696d706c65204552433230000000000000000000000000000000000000000060208201525b6040516101989190610f63565b60405180910390f35b3480156101ad57600080fd5b506101c16101bc366004610fc9565b61043d565b6040519015158152602001610198565b6101c16101df36600461101b565b610454565b3480156101f057600080fd5b506000545b604051908152602001610198565b34801561020f57600080fd5b506101c161021e3660046110e6565b6105d3565b34801561022f57600080fd5b5060405160128152602001610198565b34801561024b57600080fd5b506101f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561027f57600080fd5b506101c161028e366004611170565b6105ea565b34801561029f57600080fd5b506102b36102ae3660046111cc565b61068e565b005b3480156102c157600080fd5b506101c16102d03660046111e5565b61069d565b3480156102e157600080fd5b506101f56102f0366004611258565b6001600160a01b031660009081526001602052604090205490565b34801561031757600080fd5b506101f5610326366004611258565b6001600160a01b031660009081526003602052604090205490565b34801561034d57600080fd5b5061018b6040518060400160405280600681526020017f53494d504c45000000000000000000000000000000000000000000000000000081525081565b34801561039657600080fd5b506101c16103a5366004610fc9565b610744565b3480156103b657600080fd5b506101c16103c53660046111e5565b610751565b3480156103d657600080fd5b506101c16103e5366004611170565b6107a9565b3480156103f657600080fd5b506102b361040536600461127c565b6107ff565b34801561041657600080fd5b506101f56104253660046112f3565b610a92565b6101c1610438366004610fc9565b610ad9565b600061044a338484610b1b565b5060015b92915050565b6000808351346104649190611342565b90508351816104739190611364565b34146104c65760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f4d53475f56414c554500000000000000000000000000000060448201526064015b60405180910390fd5b60008451846104d59190611342565b90508451816104e49190611364565b84146105325760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f544f54414c5f414d4f554e5400000000000000000000000060448201526064016104bd565b60005b85518110156105c757610562338783815181106105545761055461137b565b602002602001015184610be9565b8581815181106105745761057461137b565b60200260200101516001600160a01b03166108fc849081150290604051600060405180830381858888f193505050501580156105b4573d6000803e3d6000fd5b50806105bf81611391565b915050610535565b50600195945050505050565b60006105e0848484610d9a565b5060019392505050565b60006105f7338686610be9565b6040517fa4c0ed360000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063a4c0ed36906106429033908890889088906004016113d6565b6020604051808303816000875af1158015610661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068591906113ff565b95945050505050565b336106998183610e7f565b5050565b60006106aa338686610be9565b6040517f9b6be0650000000000000000000000000000000000000000000000000000000081526001600160a01b03861690639b6be065906106f79033908a90899089908990600401611421565b6020604051808303816000875af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906113ff565b9695505050505050565b600061044a338484610be9565b600061075e868686610d9a565b6040517fa4c0ed360000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063a4c0ed36906106f79089908890889088906004016113d6565b60006107b6338686610b1b565b6040517eba451f0000000000000000000000000000000000000000000000000000000081526001600160a01b0386169062ba451f906106429033908890889088906004016113d6565b6001600160a01b0387166108555760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f4144445245535300000000000000000000000060448201526064016104bd565b6001600160a01b0387811660008181526003602090815260408083205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a0840185905260c08085018a90528151808603909101815260e0850190915280519101207f19010000000000000000000000000000000000000000000000000000000000006101008401527f0000000000000000000000000000000000000000000000000000000000000000610102840152610122830152906101420160408051601f1981840301815282825280516020918201206000845290830180835281905260ff8816918301919091526060820186905260808201859052915060019060a0016020604051602081039080840390855afa158015610995573d6000803e3d6000fd5b505050602060405103516001600160a01b0316896001600160a01b0316146109ff5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e415455524500000000000000000000000000000060448201526064016104bd565b851580610a0c5750854211155b610a585760405162461bcd60e51b815260206004820152600860248201527f544f4f5f4c41544500000000000000000000000000000000000000000000000060448201526064016104bd565b610a6382600161145f565b6001600160a01b038a16600090815260036020526040902055610a87898989610b1b565b505050505050505050565b6000306001600160a01b03841603610aad575060001961044e565b506001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6000610ae6338484610be9565b6040516001600160a01b038416903480156108fc02916000818181858888f193505050501580156105e0573d6000803e3d6000fd5b6001600160a01b03831615801590610b3b57506001600160a01b03821615155b610b875760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f4144445245535300000000000000000000000060448201526064016104bd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610c3f5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f5a45524f5f4144445245535300000000000000000000000060448201526064016104bd565b306001600160a01b03831603610c975760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f544849535f4144445245535300000000000000000000000060448201526064016104bd565b6001600160a01b03831660009081526001602052604090205481811015610d005760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f544f4b454e5300000000000000000000000000000060448201526064016104bd565b610d0a8282611472565b6001600160a01b038086166000908152600160205260408082209390935590851681529081208054849290610d4090849061145f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8c91815260200190565b60405180910390a350505050565b336001600160a01b03841614801590610dbc57506001600160a01b0383163014155b15610e6f576001600160a01b03831660009081526002602090815260408083203384529091529020546000198114610e6d5781811015610e3e5760405162461bcd60e51b815260206004820152601760248201527f4e4f545f415554484f495a45445f414c4c4f57414e434500000000000000000060448201526064016104bd565b610e488282611472565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b505b610e7a838383610be9565b505050565b6001600160a01b03821660009081526001602052604090205481811015610ee85760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f544f4b454e5300000000000000000000000000000060448201526064016104bd565b610ef28282611472565b6001600160a01b03841660009081526001602052604081209190915580548391908190610f20908490611472565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610bdc565b600060208083528351808285015260005b81811015610f9057858101830151858201604001528201610f74565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610fc657600080fd5b50565b60008060408385031215610fdc57600080fd5b8235610fe781610fb1565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b803561101681610fb1565b919050565b6000806040838503121561102e57600080fd5b823567ffffffffffffffff8082111561104657600080fd5b818501915085601f83011261105a57600080fd5b813560208282111561106e5761106e610ff5565b8160051b604051601f19603f8301168101818110868211171561109357611093610ff5565b6040529283528183019350848101820192898411156110b157600080fd5b948201945b838610156110d6576110c78661100b565b855294820194938201936110b6565b9997909101359750505050505050565b6000806000606084860312156110fb57600080fd5b833561110681610fb1565b9250602084013561111681610fb1565b929592945050506040919091013590565b60008083601f84011261113957600080fd5b50813567ffffffffffffffff81111561115157600080fd5b60208301915083602082850101111561116957600080fd5b9250929050565b6000806000806060858703121561118657600080fd5b843561119181610fb1565b935060208501359250604085013567ffffffffffffffff8111156111b457600080fd5b6111c087828801611127565b95989497509550505050565b6000602082840312156111de57600080fd5b5035919050565b6000806000806000608086880312156111fd57600080fd5b853561120881610fb1565b9450602086013561121881610fb1565b935060408601359250606086013567ffffffffffffffff81111561123b57600080fd5b61124788828901611127565b969995985093965092949392505050565b60006020828403121561126a57600080fd5b813561127581610fb1565b9392505050565b600080600080600080600060e0888a03121561129757600080fd5b87356112a281610fb1565b965060208801356112b281610fb1565b95506040880135945060608801359350608088013560ff811681146112d657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561130657600080fd5b823561131181610fb1565b9150602083013561132181610fb1565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008261135f57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761044e5761044e61132c565b634e487b7160e01b600052603260045260246000fd5b600060001982036113a4576113a461132c565b5060010190565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6001600160a01b038516815283602082015260606040820152600061073a6060830184866113ab565b60006020828403121561141157600080fd5b8151801515811461127557600080fd5b60006001600160a01b038088168352808716602084015250846040830152608060608301526114546080830184866113ab565b979650505050505050565b8082018082111561044e5761044e61132c565b8181038181111561044e5761044e61132c56fea26469706673582212205453f74849455b2fa4252b2ce3ff7c0ee4255e87d7afdcadccebaf31a26c293c64736f6c63430008110033";

type SimpleERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC20__factory extends ContractFactory {
  constructor(...args: SimpleERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    to: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleERC20> {
    return super.deploy(to, amount, overrides || {}) as Promise<SimpleERC20>;
  }
  override getDeployTransaction(
    to: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(to, amount, overrides || {});
  }
  override attach(address: string): SimpleERC20 {
    return super.attach(address) as SimpleERC20;
  }
  override connect(signer: Signer): SimpleERC20__factory {
    return super.connect(signer) as SimpleERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC20Interface {
    return new utils.Interface(_abi) as SimpleERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC20 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC20;
  }
}
