/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GreetingsRegistry,
  GreetingsRegistryInterface,
} from "../../../src/GreetingsRegistry/GreetingsRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "prefix",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "prefix",
        type: "string",
      },
    ],
    name: "postUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009be380380620009be8339810160408190526200003491620000cf565b6200003f8162000046565b50620002fe565b6000620000606000805160206200099e8339815191525490565b90506001600160a01b03811662000090576001600160a01b036000805160206200099e83398151915255620000a6565b336001600160a01b03821614620000a657600080fd5b6001620000b4838262000232565b505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000e357600080fd5b82516001600160401b0380821115620000fb57600080fd5b818501915085601f8301126200011057600080fd5b815181811115620001255762000125620000b9565b604051601f8201601f19908116603f01168101908382118183101715620001505762000150620000b9565b8160405282815288868487010111156200016957600080fd5b600093505b828410156200018d57848401860151818501870152928501926200016e565b600086848301015280965050505050505092915050565b600181811c90821680620001b957607f821691505b602082108103620001da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000b457600081815260208120601f850160051c81016020861015620002095750805b601f850160051c820191505b818110156200022a5782815560010162000215565b505050505050565b81516001600160401b038111156200024e576200024e620000b9565b62000266816200025f8454620001a4565b84620001e0565b602080601f8311600181146200029e5760008415620002855750858301515b600019600386901b1c1916600185901b1785556200022a565b600085815260208120601f198616915b82811015620002cf57888601518255948401946001909101908401620002ae565b5085821015620002ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610690806200030e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063368b8772146100465780635fdd59f81461005b578063b1441ce614610084575b600080fd5b61005961005436600461027c565b610097565b005b61006e6100693660046102ee565b61012c565b60405161007b919061032b565b60405180910390f35b6100596100923660046103a8565b6101c6565b6000600183836040516020016100af939291906104ac565b60408051601f198184030181529181523360009081526020819052209091506100d8828261059a565b503373ffffffffffffffffffffffffffffffffffffffff167f5de788bae851e5b8df641f15cc3e7e401946111d99b835b0e3f619b04f8ce68f8260405161011f919061032b565b60405180910390a2505050565b6000602081905290815260409020805461014590610459565b80601f016020809104026020016040519081016040528092919081815260200182805461017190610459565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b505050505081565b60006101f07fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b905073ffffffffffffffffffffffffffffffffffffffff81166102495773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035561026b565b3373ffffffffffffffffffffffffffffffffffffffff82161461026b57600080fd5b6001610277838261059a565b505050565b6000806020838503121561028f57600080fd5b823567ffffffffffffffff808211156102a757600080fd5b818501915085601f8301126102bb57600080fd5b8135818111156102ca57600080fd5b8660208285010111156102dc57600080fd5b60209290920196919550909350505050565b60006020828403121561030057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461032457600080fd5b9392505050565b600060208083528351808285015260005b818110156103585785810183015185820160400152820161033c565b506000604082860101526040601f19601f8301168501019250505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156103ba57600080fd5b813567ffffffffffffffff808211156103d257600080fd5b818401915084601f8301126103e657600080fd5b8135818111156103f8576103f8610379565b604051601f8201601f19908116603f0116810190838211818310171561042057610420610379565b8160405282815287602084870101111561043957600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061046d57607f821691505b6020821081036104a6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008085546104ba81610459565b600182811680156104d2576001811461050557610534565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450610534565b8960005260208060002060005b8581101561052b5781548a820152908401908201610512565b50505082870194505b50505050838582376000930192835250909392505050565b601f82111561027757600081815260208120601f850160051c810160208610156105735750805b601f850160051c820191505b818110156105925782815560010161057f565b505050505050565b815167ffffffffffffffff8111156105b4576105b4610379565b6105c8816105c28454610459565b8461054c565b602080601f8311600181146105fd57600084156105e55750858301515b600019600386901b1c1916600185901b178555610592565b600085815260208120601f198616915b8281101561062c5788860151825594840194600190910190840161060d565b508582101561064a5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207bead6b5a08bd580b90bfb13b8f7748ee2ee0c4956d96abd87c16e558573c74a64736f6c63430008110033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103";

type GreetingsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreetingsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreetingsRegistry__factory extends ContractFactory {
  constructor(...args: GreetingsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    prefix: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GreetingsRegistry> {
    return super.deploy(prefix, overrides || {}) as Promise<GreetingsRegistry>;
  }
  override getDeployTransaction(
    prefix: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(prefix, overrides || {});
  }
  override attach(address: string): GreetingsRegistry {
    return super.attach(address) as GreetingsRegistry;
  }
  override connect(signer: Signer): GreetingsRegistry__factory {
    return super.connect(signer) as GreetingsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreetingsRegistryInterface {
    return new utils.Interface(_abi) as GreetingsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GreetingsRegistry {
    return new Contract(address, _abi, signerOrProvider) as GreetingsRegistry;
  }
}
